datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

// Models 


model Profile {
  id String @id @default(uuid())
  userId String @unique
  name String 
  profileImageUrl String @db.Text
  email String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  servers MisscordServer[]
  members Member[]
  channels Channel[]
}


model MisscordServer {
  id String @id @default(uuid())
  name String @db.Text
  iconUrl String @db.Text
  inviteCode String @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profileId String
  profile Profile @relation(fields: [profileId], references: [id],onDelete: Cascade)

  members Member[]
  channels Channel[]

  @@index([profileId])

}

enum MemberRole {
  ADMIN
  MODERATOR
  MEMBER
}

model Member {
  id String @id @default(uuid())
  role MemberRole @default(MEMBER)

  profileId String 
  profile Profile @relation(fields: [profileId], references: [id],onDelete: Cascade)

  serverId String
  server MisscordServer @relation(fields: [serverId], references: [id],onDelete: Cascade)

  @@index([profileId])
  @@index([serverId])
}

enum ChannelType {
  TEXT
  AUDIO 
  VIDEO
}

model Channel {
  id String @id @default(uuid())
  name String @db.Text
  type ChannelType @default(TEXT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profileId String
  profile Profile @relation(fields: [profileId], references: [id],onDelete: Cascade)

  serverId String
  server MisscordServer @relation(fields: [serverId], references: [id],onDelete: Cascade)


  @@index([profileId])
  @@index([serverId])
}